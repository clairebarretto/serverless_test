service: hansel-ad-third-party-resume
frameworkVersion: '2'

provider:
  name: aws
  runtime: python3.8
  lambdaHashingVersion: 20201221
  stage: dev
  region: us-west-2

# Create lambda function
functions:
  lambda:
    handler: lambdas.hansel.hansel_ad_third_party_resume.lambda_function.lambda_handler
    role: Permissions
    events:
      - schedule: rate(15 minutes)

# Create other resources
resources:
  Resources:
    GasFightAPIQueueTopic: ${file(infrastructure/gasfight/SNS.yml):GasFightAPIQueue}
    HanselErrorTopic: ${file(infrastructure/hansel/SNS.yml):HanselError}

    # IAM
    Permissions:
      Type: AWS::IAM::Role
      Properties:
        RoleName: lambda-hansel_ad_third_party_resume
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: lambda-hansel_ad_third_party_resume
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - 'Fn::Join':
                      - ':'
                      -
                        - 'arn:aws:logs'
                        - Ref: 'AWS::Region'
                        - Ref: 'AWS::AccountId'
                        - 'log-group:/aws/lambda/*:*:*'
                - Effect: Allow
                  Action:
                    - sns:Publish
                  Resource:
                    - ${self:custom.GasFightAPIQueueTopic.arn}
                    - ${self:custom.HanselErrorTopic.arn}


custom:
  HanselErrorTopic:
    arn: !Ref HanselErrorTopic
  GasFightAPIQueueTopic:
    arn: !Ref GasFightAPIQueueTopic