{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "LambdaLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/hansel-ad-third-party-resume-dev-lambda"
      }
    },
    "LambdaLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/hansel-ad-third-party-resume/dev/1635733359916-2021-11-01T02:22:39.916Z/hansel-ad-third-party-resume.zip"
        },
        "Handler": "lambdas.hansel.hansel_ad_third_party_resume.lambda_function.lambda_handler",
        "Runtime": "python3.8",
        "FunctionName": "hansel-ad-third-party-resume-dev-lambda",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": {
          "Fn::GetAtt": [
            "Permissions",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "LambdaLogGroup",
        "Permissions"
      ]
    },
    "LambdaLambdaVersiongbGnfNySAMWZq61hzfNmo5kVECtvVv177A4cUQJY": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "LambdaLambdaFunction"
        },
        "CodeSha256": "glD+GDfa8mFFKwf63W2XiDlB5t3op3TTbbpD/UceEYI="
      }
    },
    "LambdaEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "rate(15 minutes)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "LambdaLambdaFunction",
                "Arn"
              ]
            },
            "Id": "lambdaSchedule"
          }
        ]
      }
    },
    "LambdaLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "LambdaLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "LambdaEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    },
    "GasFightAPIQueueTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "GasFightAPIQueue",
        "TopicName": "GasFightAPIQueue"
      }
    },
    "HanselErrorTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "HanselError",
        "TopicName": "HanselError"
      }
    },
    "Permissions": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "lambda-hansel_ad_third_party_resume",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "lambda-hansel_ad_third_party_resume",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Join": [
                        ":",
                        [
                          "arn:aws:logs",
                          {
                            "Ref": "AWS::Region"
                          },
                          {
                            "Ref": "AWS::AccountId"
                          },
                          "log-group:/aws/lambda/*:*:*"
                        ]
                      ]
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sns:Publish"
                  ],
                  "Resource": [
                    {
                      "Ref": "GasFightAPIQueueTopic"
                    },
                    {
                      "Ref": "HanselErrorTopic"
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-hansel-ad-third-party-resume-dev-ServerlessDeploymentBucketName"
      }
    },
    "LambdaLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "LambdaLambdaVersiongbGnfNySAMWZq61hzfNmo5kVECtvVv177A4cUQJY"
      },
      "Export": {
        "Name": "sls-hansel-ad-third-party-resume-dev-LambdaLambdaFunctionQualifiedArn"
      }
    }
  }
}